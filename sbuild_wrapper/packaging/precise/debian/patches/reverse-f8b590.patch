diff --git a/configure.ac b/configure.ac
index 6ad8ff4..3b79ba3 100644
--- a/configure.ac
+++ b/configure.ac
@@ -720,7 +720,7 @@ esac
 
 PKG_CHECK_MODULES(
 	[PKCS11_HELPER],
-	[libpkcs11-helper-1 >= 1.11],
+	[libpkcs11-helper-1 >= 1.02],
 	[have_pkcs11_helper="yes"],
 	[]
 )
diff --git a/src/openvpn/pkcs11_openssl.c b/src/openvpn/pkcs11_openssl.c
index 87eb166..af843b7 100644
--- a/src/openvpn/pkcs11_openssl.c
+++ b/src/openvpn/pkcs11_openssl.c
@@ -49,7 +49,7 @@ pkcs11_init_tls_session(pkcs11h_certificate_t certificate,
   int ret = 1;
 
   X509 *x509 = NULL;
-  EVP_PKEY *evp = NULL;
+  RSA *rsa = NULL;
   pkcs11h_openssl_session_t openssl_session = NULL;
 
   if ((openssl_session = pkcs11h_openssl_createSession (certificate)) == NULL)
@@ -63,9 +63,9 @@ pkcs11_init_tls_session(pkcs11h_certificate_t certificate,
    */
   certificate = NULL;
 
-  if ((evp = pkcs11h_openssl_session_getEVP (openssl_session)) == NULL)
+  if ((rsa = pkcs11h_openssl_session_getRSA (openssl_session)) == NULL)
     {
-      msg (M_WARN, "PKCS#11: Unable get evp object");
+      msg (M_WARN, "PKCS#11: Unable get rsa object");
       goto cleanup;
     }
 
@@ -75,7 +75,7 @@ pkcs11_init_tls_session(pkcs11h_certificate_t certificate,
       goto cleanup;
     }
 
-  if (!SSL_CTX_use_PrivateKey (ssl_ctx->ctx, evp))
+  if (!SSL_CTX_use_RSAPrivateKey (ssl_ctx->ctx, rsa))
     {
       msg (M_WARN, "PKCS#11: Cannot set private key for openssl");
       goto cleanup;
@@ -108,10 +108,10 @@ cleanup:
       x509 = NULL;
     }
 
-  if (evp != NULL)
+  if (rsa != NULL)
     {
-      EVP_PKEY_free (evp);
-      evp = NULL;
+      RSA_free (rsa);
+      rsa = NULL;
     }
 
   if (openssl_session != NULL)
